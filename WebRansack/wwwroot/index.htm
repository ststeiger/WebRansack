<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />


    <title>Sockets</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />

    <style type="text/css">
        * {
            cursor: default !important;
        }

        html, body {
            margin: 0px;
            padding: 0px;
            width: 100%;
            height: 100%;
        }
        
    </style>

    <!--<link rel="shortcut icon" type="image/png" href="../favicon.png" />-->
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.ico" />

    <!--
    <link href="leaflet/leaflet.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="ts/leaflet/EasyAjax.js" charset="utf-8"></script>
    -->
    
</head>
<body>
    
    <!--
    <script src="dump/polyfills/classList.js?v=1"></script>
    <script src="dump/polyfills/object-setprototypeof-ie9.js?v=1"></script>
    <script src="dump/polyfills/es6-promise-2.0.0.min.js?v=1"></script>
    <script src="dump/polyfills/fetch.js?v=1"></script>
    -->

    <fieldset>
        <legend>Main:</legend>

        <label class="lbl" for="txtFileName">File name</label>
        <input class="txt" id="txtFileName" type="text" value="*.cs" />
        <br /><br />
        <label class="lbl" for="txtContainingText">Containing text</label>
        <input class="txt" id="txtContainingText" type="text" value="SELECT" />
        <br /><br />s
        <label class="lbl" for="txtLookIn">Look in</label>
        <!--
        <input class="txt" id="txtLookIn" type="text" value="D:\username\Documents\Visual Studio 2017\TFS\COR-Basic\COR-Basic\Basic\Basic" />
        <input class="txt" id="txtLookIn" type="text" value="/root/github/RedmineMailService" />
        -->
        <input class="txt" id="txtLookIn" type="text" value="C:\Users\Administrator\Documents\Visual Studio 2017\Projects\Be.HexEditor" />
        
        <br /><br />
        <label class="lbl" for="cbSubfolders">Subfolders</label>
        <input id="cbSubfolders" type="checkbox" checked="checked" />

        <br /><br />

        <input type="button" value="Start" onclick="startSearch()" />
        <input type="button" value="Stop" />

    </fieldset>

    <div style="clear: both;"></div>

    <div id="divResults"></div>

  
    <script type="text/javascript">
        // ws/wss

        if (!String.prototype.startsWith)
        {
            String.prototype.startsWith = function (search, pos)
            {
                return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
            };
        }


        function example()
        {
            var exampleSocket = new WebSocket("ws://localhost:57794/ws"); //, "protocolOne");

            exampleSocket.onmessage = function (event)
            {
                console.log("onmessage", event);
                console.log(event.data);

                // exampleSocket.close();
            };

            exampleSocket.onopen = function (event)
            {
                exampleSocket.send("Here's some text that the server is urgently awaiting for !");
            };
        } // End Function example 


        function wsUrl(urlPart)
        {
            // let exampleSocket = new WebSocket("ws://localhost:57794/ransack"); //, "protocolOne");
            let url = document.location.protocol.toLowerCase().startsWith("https")
                ? "wss" : "ws";
            url += "://" + document.location.host;

            if (!urlPart.startsWith("/"))
                url += "/";

            url += urlPart;

            // console.log(url);
            return url;
        } // End Function wsUrl 


        function startSearch()
        {
            let exampleSocket = new WebSocket(wsUrl("ransack")); //, "protocolOne");

            exampleSocket.onmessage = function (event)
            {
                console.log("onmessage", event);
                console.log(event.data);
                window.fs = JSON.parse(event.data);

                let divResults = document.getElementById("divResults");
                divResults.innerHTML = "";


                let table = document.createElement("table");
                
                for (let i = 0; i < fs.length; ++i)
                {
                    let tr = document.createElement("tr");

                    let td = document.createElement("td");
                    td.appendChild(
                        document.createTextNode(fs[i].File + ":" + fs[i].LineNumber)
                    );
                    tr.appendChild(td);

                    let td2 = document.createElement("td");
                    td2.appendChild(
                        document.createTextNode(fs[i].Line)
                    );
                    tr.appendChild(td2);

                    table.appendChild(tr);
                }
                
                divResults.appendChild(table);

                exampleSocket.close();
                console.log("closed");
            };

            exampleSocket.onopen = function (event)
            {
                let fileName = document.getElementById("txtFileName");
                let containingText = document.getElementById("txtContainingText");
                let lookIn = document.getElementById("txtLookIn");
                let subfolders = document.getElementById("cbSubfolders");

                let searchSettings = {
                      "FileName": fileName.value
                    , "ContainingText": containingText.value
                    , "LookIn": lookIn.value
                    , "Subfolders": (subfolders.value == "checked")
                };

                console.log(searchSettings);

                exampleSocket.send( JSON.stringify(searchSettings) );
            };
        } // End function startSearch 
        
        
    </script>
    
    <style type="text/css" media="all">
        .csbKey, .csbValue {
            font-family: Verdana;
            font-size: 8pt;
        }


        fieldset {
            margin: 0.25cm;
            padding: 0.25cm;
            float: left;
            border: 1px solid #E6E6E6;
        }

        .lbl {
            display: inline-block;
            width: 120px;
        }

        .txt {
            display: inline-block;
            width: 15cm;
        }

        tr:nth-child(2n+1) {
            background-color: whitesmoke;
        }


    </style>
    
</body>
</html>
