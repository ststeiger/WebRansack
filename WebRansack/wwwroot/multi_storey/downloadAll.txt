https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto
var cryptoObj = window.crypto || window.msCrypto; 
var array = new Uint32Array(10);
window.crypto.getRandomValues(array)




https://www.new-leonardo.ch/fl%C3%A4chen.html
https://www.new-leonardo.ch/fl√§chen.html

function download(text, filename)
{
    if (text !== null && navigator.msSaveBlob)
        return navigator.msSaveBlob(new Blob([text], { type: "image/svg+xml" }), filename);
     // var text = JSON.stringify(data); // "octet/stream" application/json
     var blob = new Blob([text], {type: "text/plain"});
     var blob = new Blob([text], {type: "image/svg+xml"});
     
     var url = window.URL.createObjectURL(blob);
     var a = document.createElement("a");
     a.href = url;
     a.download = filename;
     a.click();
     // window.URL.revokeObjectURL(object_URL);
}

var allFiles = Array.prototype.slice.call(document.querySelectorAll('img[src^="files/Grundrisse"]'))
.map(function(x){ return x.getAttribute("src");})
.filter(function(v, i, a) { return a.indexOf(v) === i;})
;


function sleep(ms) 
{
    return new Promise(function(resolve){  setTimeout(resolve, ms); } );
}


for(let i = 0; i < allFiles.length; ++i)
{
    console.log(allFiles[i]);
    var filename = allFiles[i].substring(allFiles[i].lastIndexOf('/')+1);
    console.log(filename);
    
    var fetchResult = await fetch(allFiles[i]);
    var xml = await fetchResult.text();
    console.log(xml);
    download(xml , filename);
    await sleep(5000);
}
